[tool:pytest]
xfail_strict=true
filterwarnings =
    # distutils: imp module is deprecated in favor of importlib
    # * python3.6/3.7/3.8
    ignore::DeprecationWarning:distutils.*:
    # bs4: ABCs must be imported from collections.abc, not collections, from python3.9
    # * python 3.7/3.8
    ignore::DeprecationWarning:bs4.*:
addopts =
    -rxXs
    --cov=zulipterminal
    --no-cov-on-fail

[tool:isort]
# Use black for the default settings (with adjustments listed below)
profile=black
# For compatibility with 'black' we'd want to set this consistently
line_length=88
atomic=True
# This is compatible with black, but we could remove it
lines_after_imports=2

# flake8 takes a little more time than pycodestyle, but finds more things
# (we could also look at pylint, zulint, etc.)
[flake8]
max-line-length=88
ignore=
  # E121 - continuation line under-indented for hanging indent
  E121,
  # E123 - closing bracket does not match indentation of opening bracket's line
  E123,
  # E126 - continuation line over-indented for hanging indent
  E126,
  # W503 - line break before binary operator - new PEP8 best practice, cf W504
  W503,
  # E203 - Colons should not have any space before them (conflicts with black)
  E203,
  # E241 - Multiple spaces after ',' - breaks layouts like themes files
  E241,
  # E221 - Multiple spaces before operator - breaks layouts like theme files
  E221,
  # E252 - Spaces in parameters, a style deliberately avoided
  E252,
  # F841 - assigned to but never used - FIXME: indicates potential issues
  F841,
  # Q000 - inline quotes - FIXME: standardize on " or ' in future?
  Q000,
inline-quotes = "
multiline-quotes = """
exclude=.git,__pycache__,build,dist,zt_venv

[mypy]
python_version = 3.6

# Logistics of what code to check and how to handle the data.
# mypy_path = stubs/
scripts_are_modules = True
show_traceback = True
cache_dir = .mypy_cache

# Options to make the checking stricter, as would be mypy --strict
# (in order of mypy --help docs for --strict)
warn_unused_configs = True
disallow_any_generics = True
disallow_subclassing_any = False
disallow_untyped_calls = False
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_return_any = False
no_implicit_reexport = False
strict_equality = True

# These are now defaults and we could remove them
warn_no_return = True
strict_optional = True

# If a library is typed, that's fine, otherwise don't worry
ignore_missing_imports = True

[coverage:run]
branch = True
omit =
#     a/b.py,
#     fizz/buzz/bar.py

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code is not run:
    if 0:
    if __name__ == .__main__.:

precision = 1
skip_covered = True
show_missing = True
