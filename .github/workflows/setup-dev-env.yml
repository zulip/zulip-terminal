name: Test setting up dev environment

on: [push, workflow_dispatch]

jobs:
  setup:
    strategy:
      # Not failing fast allows all matrix jobs to try & finish even if one fails early
      fail-fast: false
      matrix:
        env:
          - {PYTHON: 3.6, OS: ubuntu-latest, NAME: "CPython 3.6 (ubuntu)"}
          - {PYTHON: 3.7, OS: ubuntu-latest, NAME: "CPython 3.7 (ubuntu)"}
          - {PYTHON: 3.8, OS: ubuntu-latest, NAME: "CPython 3.8 (ubuntu)"}
          - {PYTHON: 3.9, OS: ubuntu-latest, NAME: "CPython 3.9 (ubuntu)", CODECOV: true}
            # mypy requires typed-ast, which has no support for pypy
            #- {PYTHON: 'pypy3', OS: ubuntu-latest, NAME: "PyPy 3 (ubuntu)"}
          - {PYTHON: 3.9, OS: macos-latest, NAME: "CPython 3.9 (macos)"}
        install-method: ['pip', 'pipenv', 'make']
    runs-on: ${{ matrix.env.OS }}
    name: Install - ${{ matrix.env.NAME}} using ${{matrix.install-method}}
    steps:
      - uses: actions/checkout@v2
      - name: Install Python version ${{ matrix.env.PYTHON }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.env.PYTHON }}
      - name: Output Python version
        run: python --version
      - name: Ensure libxml-related libraries are installed (pypy3 only)
        if: matrix.env.PYTHON == 'pypy3'
        run: sudo apt install libxml2-dev libxslt1-dev
      - name: MAKE - Set up full dev environment
        run: make
        if: matrix.install-method == 'make'
      - name: PIP - Upgrade pip
        run: python -m pip install --upgrade pip
        if: matrix.install-method == 'pip'
      - name: PIP - Set up full dev environment
        run: pip install '.[dev]'
        if: matrix.install-method == 'pip'
      - name: PIPENV - Install pipenv
        run: pip install --user pipenv
        if: matrix.install-method == 'pipenv'
      - name: PIPENV - Setup dev env
        run: pipenv install --dev
        if: matrix.install-method == 'pipenv'
      - name: PIPENV - Check installed
        run: pipenv run pip install '.[dev]'
        if: matrix.install-method == 'pipenv'
